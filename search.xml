[{"title":"Create a new php-fpm docker image on AWS ECR","url":"https://christhai.github.io/2016/06/29/Create-a-new-php-fpm-docker-image-on-AWS-ECR/","content":"<h2 id=\"Create-a-new-php-fpm-docker-image-on-AWS-ECR-Used-for-docker-muti-container-on-EB\"><a href=\"#Create-a-new-php-fpm-docker-image-on-AWS-ECR-Used-for-docker-muti-container-on-EB\" class=\"headerlink\" title=\"Create a new php-fpm docker image on AWS ECR Used for docker muti-container on EB\"></a>Create a new php-fpm docker image on AWS ECR Used for docker muti-container on EB</h2><p>  480  aws ecr get-login –region us-east-1<br>  481  docker login -u AWS -p<br>  482  docker images<br>  483  docker build -t christhai/php-app .<br>  491  docker tag christhai/php-app:latest 42xxxxxxxx2.dkr.ecr.us-east-1.amazonaws.com/christhai:php-app<br>  492  docker images<br>  493  docker push 42xxxxxxxx2.dkr.ecr.us-east-1.amazonaws.com/christhai:php-app</p>\n  <!-- ![](/images/favicon.png) -->\n"},{"title":"Git Skills","url":"https://christhai.github.io/2016/06/29/Git-Skills/","content":"<h1 id=\"How-do-I-resolve-git-saying-“Commit-your-changes-or-stash-them-before-you-can-merge”\"><a href=\"#How-do-I-resolve-git-saying-“Commit-your-changes-or-stash-them-before-you-can-merge”\" class=\"headerlink\" title=\"How do I resolve git saying “Commit your changes or stash them before you can merge”?\"></a><a href=\"http://stackoverflow.com/questions/15745045/how-do-i-resolve-git-saying-commit-your-changes-or-stash-them-before-you-can-me\" target=\"_blank\" rel=\"external\">How do I resolve git saying “Commit your changes or stash them before you can merge”?</a></h1><p>you can’t merge with local modifications. Git protects you from losing potentially important changes. You have three options. One is to commit the change using</p>\n<p>git commit -m “My message”</p>\n<p>The second is to stash it. stashing acts as a stack, where you can push changes, and you pop them in reverse order.</p>\n<p>To stash type:</p>\n<p>git stash</p>\n<p>Do the merge, and than pull the stash:</p>\n<p>git stash pop</p>\n<a id=\"more\"></a>\n<p>The third options is to discard the local changes using git reset –hard</p>\n<h1 id=\"How-to-view-file-diff-in-git-before-commit\"><a href=\"#How-to-view-file-diff-in-git-before-commit\" class=\"headerlink\" title=\"How to view file diff in git before commit\"></a><a href=\"http://stackoverflow.com/questions/10039747/how-to-view-file-diff-in-git-before-commit\" target=\"_blank\" rel=\"external\">How to view file diff in git before commit</a></h1><p>If you want to see what you haven’t git added yet:</p>\n<p>git diff – myfile.txt</p>\n<p>or if you want to see already-added changes</p>\n<p>git diff –cached – myfile.txt</p>\n<p>or</p>\n<p>git diff HEAD file</p>\n<p>will show you changes you added to your worktree from the last commit. All the changes (staged or not staged) will be shown.</p>\n<h1 id=\"Showing-which-files-have-changed-between-two-revisions\"><a href=\"#Showing-which-files-have-changed-between-two-revisions\" class=\"headerlink\" title=\"Showing which files have changed between two revisions\"></a><a href=\"http://stackoverflow.com/questions/822811/showing-which-files-have-changed-between-two-revisions\" target=\"_blank\" rel=\"external\">Showing which files have changed between two revisions</a></h1><p>Try</p>\n<p>$ git diff –name-status master..branchName</p>\n<h1 id=\"How-can-I-compare-files-from-two-different-branches\"><a href=\"#How-can-I-compare-files-from-two-different-branches\" class=\"headerlink\" title=\"How can I compare files from two different branches?\"></a><a href=\"http://stackoverflow.com/questions/4099742/how-can-i-compare-files-from-two-different-branches\" target=\"_blank\" rel=\"external\">How can I compare files from two different branches?</a></h1><p>git diff can show you the difference between two commits:</p>\n<p>git diff mybranch master – myfile.cs</p>\n<h1 id=\"Differences-for-a-certain-folder-between-remote-git-branches\"><a href=\"#Differences-for-a-certain-folder-between-remote-git-branches\" class=\"headerlink\" title=\"Differences for a certain folder between remote git branches\"></a><a href=\"http://stackoverflow.com/questions/12123633/differences-for-a-certain-folder-between-git-branches\" target=\"_blank\" rel=\"external\">Differences for a certain folder between remote git branches</a></h1><p>git diff master..origin/yourbranch path/to/folder</p>\n<h1 id=\"How-do-you-merge-selective-files-with-git-merge\"><a href=\"#How-do-you-merge-selective-files-with-git-merge\" class=\"headerlink\" title=\"How do you merge selective files with git-merge?\"></a><a href=\"http://stackoverflow.com/questions/449541/how-do-you-merge-selective-files-with-git-merge\" target=\"_blank\" rel=\"external\">How do you merge selective files with git-merge?</a></h1><p><a href=\"http://stackoverflow.com/questions/449541/how-do-you-merge-selective-files-with-git-merge\" target=\"_blank\" rel=\"external\">http://stackoverflow.com/questions/449541/how-do-you-merge-selective-files-with-git-merge</a></p>\n<p>use git add –patch or possibly git add –interactive which allows you to add just parts of a hun</p>\n<p><a href=\"https://www.haykranen.nl/2011/07/18/git-merging-specific-files-from-another-branch/\" target=\"_blank\" rel=\"external\">https://www.haykranen.nl/2011/07/18/git-merging-specific-files-from-another-branch/</a></p>\n<h1 id=\"Git-Delete-a-branch-local-or-remote\"><a href=\"#Git-Delete-a-branch-local-or-remote\" class=\"headerlink\" title=\"Git: Delete a branch (local or remote)\"></a><strong>Git: Delete a branch (local or remote)</strong></h1><p>To delete a local branch</p>\n<p>git branch -d the_local_branch</p>\n<p>To remove a remote branch (if you know what you are doing!)</p>\n<p>git push origin :the_remote_branch</p>\n<h1 id=\"Git-HowTo-revert-a-commit-already-pushed-to-a-remote-repository\"><a href=\"#Git-HowTo-revert-a-commit-already-pushed-to-a-remote-repository\" class=\"headerlink\" title=\"Git HowTo: revert a commit already pushed to a remote repository\"></a><strong>Git HowTo: revert a commit already pushed to a remote repository</strong></h1><h2 id=\"Case-1-Delete-the-last-commit\"><a href=\"#Case-1-Delete-the-last-commit\" class=\"headerlink\" title=\"Case 1: Delete the last commit\"></a><strong>Case 1: Delete the last commit</strong></h2><p>Deleting the last commit is the easiest case. Let’s say we have a remote <em>mathnet</em>with branch <em>master</em> that currently points to commit <em>dd61ab32</em>. We want to remove the top commit. Translated to git terminology, we want to force the <em>master</em> branch of the <em>mathnet</em> remote repository to the parent of <em>dd61ab32</em>:</p>\n<table><br>  <tr><br>    <td>1:<br></td><br>    <td>$ git push mathnet +dd61ab32^:master<br></td><br>  </tr><br></table>\n\n\n<p>Where git interprets x^ as the parent of x and + as a forced non-fastforward push. If you have the master branch checked out locally, you can also do it in two simpler steps: First reset the branch to the parent of the current commit, then force-push it to the remote.</p>\n<table><br>  <tr><br>    <td>1:<br>2:<br></td><br>    <td>$ git reset HEAD^ –hard<br>$ git push mathnet -f</td><br>  </tr><br></table>\n\n\n<h3 id=\"Undo-a-commit-and-redo\"><a href=\"#Undo-a-commit-and-redo\" class=\"headerlink\" title=\"Undo a commit and redo\"></a><strong>Undo a commit and redo</strong></h3><p>$ git commit -m “Something terribly misguided” (1)</p>\n<p>$ git reset –soft HEAD~ (2)</p>\n<h1 id=\"git-ahead-behind-info-between-master-and-branch\"><a href=\"#git-ahead-behind-info-between-master-and-branch\" class=\"headerlink\" title=\"git ahead/behind info between master and branch?\"></a><a href=\"http://stackoverflow.com/questions/20433867/git-ahead-behind-info-between-master-and-branch\" target=\"_blank\" rel=\"external\">git ahead/behind info between master and branch?</a></h1><p>First of all to see how many revisions you are behind locally, you should do a git fetch to make sure you have the latest info from your remote.</p>\n<p>The default output of git status tells you how many revisions you are ahead or behind, but usually I find this too verbose:</p>\n<p>$ git status # On branch master # Your branch and ‘origin/master’ have diverged, # and have 2 and 1 different commit each, respectively. # nothing to commit (working directory clean)</p>\n<p>I prefer git status -sb:</p>\n<p>$ git status -sb ## master…origin/master [ahead 2, behind 1]</p>\n<p>In fact I alias this to simply git s, and this is the main command I use for checking status.</p>\n<p>To see the diff in the “ahead revisions” of master, I can exclude the “behind revisions” from origin/master:</p>\n<p>git diff master..origin/master^</p>\n<p>To see the diff in the “behind revisions” of origin/master, I can exclude the “ahead revisions” from master:</p>\n<p>git diff origin/master..master^^</p>\n<p>If there are 5 revisions ahead or behind it might be easier to write like this:</p>\n<p>git diff master..origin/master~5 git diff origin/master..master~5</p>\n<h1 id=\"Git-Branching-Basic-Branching-and-Merging\"><a href=\"#Git-Branching-Basic-Branching-and-Merging\" class=\"headerlink\" title=\"Git Branching - Basic Branching and Merging\"></a>Git Branching - Basic Branching and Merging</h1><p><a href=\"https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging\" target=\"_blank\" rel=\"external\">https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging</a></p>\n<h1 id=\"Get-changes-from-master-into-branch-in-git\"><a href=\"#Get-changes-from-master-into-branch-in-git\" class=\"headerlink\" title=\"Get changes from master into branch in git\"></a><a href=\"http://stackoverflow.com/questions/5340724/get-changes-from-master-into-branch-in-git\" target=\"_blank\" rel=\"external\">Get changes from master into branch in git</a></h1><p>Checkout the aq branch, then rebase from master.</p>\n<p>git checkout aq</p>\n<p>git rebase master</p>\n<h1 id=\"Git-Branching-Rebasing\"><a href=\"#Git-Branching-Rebasing\" class=\"headerlink\" title=\"Git Branching - Rebasing\"></a>Git Branching - Rebasing</h1><p><a href=\"https://git-scm.com/book/en/v2/Git-Branching-Rebasing\" target=\"_blank\" rel=\"external\">https://git-scm.com/book/en/v2/Git-Branching-Rebasing</a></p>\n"},{"title":"Hello World","url":"https://christhai.github.io/2016/06/27/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><a id=\"more\"></a>\n<h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n"}]